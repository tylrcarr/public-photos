name: Process Uploaded Photos

on:
  workflow_dispatch:
    inputs:
      description:
        description: "Photo description"
        required: true
      iso_date:
        description: "ISO8601 date (optional, e.g., 2024-12-11)"
        required: false
      thumbnail_file:
        description: "File name for thumbnail generation (optional)"
        required: false

jobs:
  process_photos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install jq -y
          sudo apt-get install file -y
          sudo apt-get install imagemagick -y

      - name: Process uploads and generate thumbnail
        run: |
          set -e

          # Current date fallback
          CURRENT_DATE=$(date +%Y-%m-%d)
          ISO_DATE="${{ github.event.inputs.iso_date || CURRENT_DATE }}"
          THUMBNAIL_FILE="${{ github.event.inputs.thumbnail_file || '' }}"
          DESCRIPTION="${{ github.event.inputs.description }}"
          UPLOADS_DIR="uploads"

          # Validate ISO date and extract year/month/day
          if date -d "$ISO_DATE" >/dev/null 2>&1; then
              YEAR=$(date -d "$ISO_DATE" +%Y)
              MONTH=$(date -d "$ISO_DATE" +%m)
              DAY=$(date -d "$ISO_DATE" +%d)
          else
              echo "Invalid ISO date provided: $ISO_DATE. Falling back to current date."
              YEAR=$(date +%Y)
              MONTH=$(date +%m)
              DAY=$(date +%d)
          fi

          WORKING_DIR="$YEAR/$MONTH/$DAY"
          echo "Processing files for date: $YEAR-$MONTH-$DAY"
          echo "Description: $DESCRIPTION"

          # Check if uploads folder exists and is not empty
          if [ ! -d "$UPLOADS_DIR" ] || [ -z "$(ls -A "$UPLOADS_DIR")" ]; then
              echo "No files to process in uploads folder. Exiting."
              exit 0
          fi

          # Create target directory
          mkdir -p "$WORKING_DIR"

          # Ensure ledger.json exists and is valid
          if [ ! -f "ledger.json" ]; then
              echo "{}" > ledger.json
          fi
          if ! jq empty ledger.json >/dev/null 2>&1; then
              echo "Invalid ledger.json. Exiting."
              exit 1
          fi

          # Initialize variables for thumbnail
          THUMBNAIL_IMAGE=""
          THUMBNAIL_PATH="$WORKING_DIR/thumbnail.png"

          # Process each file
          for FILE in "$UPLOADS_DIR"/*; do
              if [ ! -f "$FILE" ]; then
                  echo "Skipping invalid file: $FILE"
                  continue
              fi

              # Move the file
              mv "$FILE" "$WORKING_DIR/"

              # Set thumbnail source file
              if [ -z "$THUMBNAIL_IMAGE" ] && { [ -z "$THUMBNAIL_FILE" ] || [[ "$(basename "$FILE")" == "$THUMBNAIL_FILE" ]]; }; then
                  THUMBNAIL_IMAGE="$WORKING_DIR/$(basename "$FILE")"
              fi

              # Update ledger.json
              UPDATED_JSON=$(jq --arg date "$WORKING_DIR" --arg file "$(basename "$FILE")" --arg text "$DESCRIPTION" '
                  if .[$date] == null then .[$date] = { files: [], text: $text } else . end |
                  .[$date].files += [$file] |
                  .[$date].text = .[$date].text // $text
              ' ledger.json)
              echo "$UPDATED_JSON" > ledger.json
          done

          # Generate Thumbnail
          if [ -n "$THUMBNAIL_IMAGE" ]; then
              echo "Generating thumbnail for: $THUMBNAIL_IMAGE"
              convert "$THUMBNAIL_IMAGE" -thumbnail 150x150^ -gravity center -extent 150x150 "$THUMBNAIL_PATH"
              echo "Thumbnail created: $THUMBNAIL_PATH"
          else
              echo "No valid image found for thumbnail generation."
          fi

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          if ! git diff --cached --quiet; then
              git commit -m "Processed uploads, generated thumbnail, and updated ledger.json"
              git push
          else
              echo "No changes to commit."
          fi

