name: Process Uploaded Photos

on:
  workflow_dispatch:
    inputs:
      description:
        description: "Photo description"
        required: true

jobs:
  process_photos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq and file utilities
        run: |
          sudo apt-get update
          sudo apt-get install jq -y
          sudo apt-get install file -y

      - name: Process uploads
        run: |
          set -e

          # Current date as fallback
          CURRENT_YEAR=$(date +%Y)
          CURRENT_MONTH=$(date +%m)
          CURRENT_DAY=$(date +%d)

          YEAR=$CURRENT_YEAR
          MONTH=$CURRENT_MONTH
          DAY=$CURRENT_DAY
          DESCRIPTION="${{ github.event.inputs.description }}"
          UPLOADS_DIR="uploads"
          WORKING_DIR="$YEAR/$MONTH/$DAY"

          echo "YEAR: $YEAR, MONTH: $MONTH, DAY: $DAY"
          echo "Description: $DESCRIPTION"

          # Debugging: Check uploads directory
          echo "Uploads directory contents before processing:"
          ls -la "$UPLOADS_DIR" || echo "Uploads directory does not exist."

          # Check if uploads folder exists
          if [ ! -d "$UPLOADS_DIR" ]; then
              echo "No uploads folder found. Exiting."
              exit 0
          fi

          # Check if uploads folder is empty
          if [ -z "$(ls -A "$UPLOADS_DIR")" ]; then
              echo "Uploads folder is empty. Exiting."
              exit 0
          fi

          # Create target directory
          mkdir -p "$WORKING_DIR" || { echo "Failed to create $WORKING_DIR"; exit 1; }
          echo "Target working directory: $WORKING_DIR"
          ls -la "$WORKING_DIR"

          # Ensure ledger.json exists
          if [ ! -f "ledger.json" ]; then
              echo "{}" > ledger.json
          fi

          # Debugging: Check ledger.json before processing
          echo "ledger.json contents before processing:"
          cat ledger.json || echo "ledger.json does not exist or is empty."

          # Validate ledger.json
          if ! jq empty ledger.json >/dev/null 2>&1; then
              echo "ledger.json is malformed. Exiting."
              exit 1
          fi

          # Process each file
          for FILE in "$UPLOADS_DIR"/*; do
              echo "Processing file: $FILE"

              # Check if the file is valid
              if [ ! -f "$FILE" ]; then
                  echo "$FILE is not a valid file. Skipping."
                  continue
              fi

              # Debugging: File properties
              echo "File type for $FILE:"
              file "$FILE" || echo "Failed to determine file type."

              echo "File size for $FILE:"
              stat --printf="%s bytes\n" "$FILE" || echo "Failed to determine file size."

              # Generate new file name
              ITEM_NUMBER=$(ls -1q "$WORKING_DIR" | wc -l)
              ((ITEM_NUMBER++))
              FILE_EXTENSION="${FILE##*.}"
              NEW_FILENAME="$ITEM_NUMBER.$FILE_EXTENSION"

              # Debugging: File renaming and moving
              echo "Attempting to move $FILE to $WORKING_DIR/$NEW_FILENAME"
              mv "$FILE" "$WORKING_DIR/$NEW_FILENAME" || { echo "Failed to move $FILE"; exit 1; }

              # Update ledger.json
              echo "Updating ledger.json with file $NEW_FILENAME"
              UPDATED_JSON=$(jq --arg date "$WORKING_DIR" --arg file "$NEW_FILENAME" --arg text "$DESCRIPTION" '
                  if .[$date] == null then .[$date] = { files: [], text: $text } else . end |
                  .[$date].files += [$file] |
                  .[$date].text = .[$date].text // $text
              ' ledger.json) || { echo "jq command failed"; exit 1; }

              echo "$UPDATED_JSON" > ledger.json || { echo "Failed to write to ledger.json"; exit 1; }
              echo "File $FILE processed successfully and added to ledger.json."
          done

          # Debugging: Check ledger.json after processing
          echo "ledger.json contents after processing:"
          cat ledger.json

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          if ! git diff --cached --quiet; then
              git commit -m "Processed uploads and updated ledger.json"
              git push || echo "Push failed. Check permissions."
          else
              echo "No changes to commit."
          fi