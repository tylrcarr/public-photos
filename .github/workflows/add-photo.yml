name: Add Photo with Upload

on:
  workflow_dispatch:
    inputs:
      description:
        description: "Photo description"
        required: false

jobs:
  add_photo:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download the uploaded photo
      - name: Download photo artifact
        uses: actions/download-artifact@v3
        with:
          name: photo-file

      # Step 3: Install jq (used for JSON manipulation)
      - name: Install jq
        run: sudo apt-get install jq -y

      # Step 4: Process the uploaded photo
      - name: Process uploaded photo
        run: |
          PHOTO_PATH="./photo-file"
          if [ ! -f "$PHOTO_PATH" ]; then
              echo "Photo file not found."
              exit 1
          fi

          # Set up the working directory based on current date
          YEAR=$(date +%Y)
          MONTH=$(date +%m)
          DAY=$(date +%d)
          WORKING_DIR="$YEAR/$MONTH/$DAY"
          mkdir -p "$WORKING_DIR"

          # Generate the new filename
          ITEM_NUMBER=$(ls -1q "$WORKING_DIR" | wc -l)
          ((ITEM_NUMBER++))
          FILE_EXTENSION="${PHOTO_PATH##*.}"
          NEW_FILENAME="$ITEM_NUMBER.$FILE_EXTENSION"

          # Move the photo
          mv "$PHOTO_PATH" "$WORKING_DIR/$NEW_FILENAME"

          # Ensure ledger.json exists
          if [ ! -f "ledger.json" ]; then
              echo "{}" > ledger.json
          fi

          # Get the description input
          DESCRIPTION="${{ github.event.inputs.description || 'Default description' }}"

          # Update ledger.json
          UPDATED_JSON=$(jq --arg date "$WORKING_DIR" --arg file "$NEW_FILENAME" --arg text "$DESCRIPTION" '
              if .[$date] == null then .[$date] = { files: [], text: $text } else . end |
              .[$date].files += [$file] |
              .[$date].text = .[$date].text // $text
          ' ledger.json)

          echo "$UPDATED_JSON" > ledger.json

          echo "File moved to $WORKING_DIR/$NEW_FILENAME and ledger updated."

      # Step 5: Commit changes
      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Add photo to $YEAR/$MONTH/$DAY and update ledger.json"
          git push

